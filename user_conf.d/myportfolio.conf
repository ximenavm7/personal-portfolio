# Define the rate limiting zone with a 10MB shared memory zone, allowing 1 request per minute
limit_req_zone $binary_remote_addr zone=mylimit:10m rate=1r/m;

server {
    listen 80; # Listen for HTTP requests on port 80
    server_name pe-ximena.duckdns.org;

    # Redirect HTTP requests to HTTPS
    if ($host = pe-ximena.duckdns.org) {
        return 301 https://$host$request_uri; # Redirect to the same URI but with HTTPS
    }
}

server {
    listen 443 ssl; # Listen for HTTPS requests on port 443 with SSL
    server_name pe-ximena.duckdns.org;

    # Specify the custom error page for 429 errors
    error_page 429 = @429;

    location / {
        proxy_pass http://myportfolio:5000/; # Proxy pass to the Flask app running in the myportfolio container on port 5000
    }

    # Apply rate limiting to POST requests only for /api/timeline_post
    location /api/timeline_post {
        limit_req zone=mylimit; # Apply the defined rate limiting zone
        proxy_pass http://myportfolio:5000/api/timeline_post; # Proxy pass to the Flask app's POST endpoint
        limit_req_log_level warn; # Log level for rate limiting events
        limit_req_status 429; # Status code to return when rate limit is exceeded
    }

    # Define the custom error message for 429 Too Many Requests
    location @429 {
        return 429 'Too many requests, try again later'; # Custom message for 429 error
        add_header Content-Type text/plain; # Set the content type to plain text
    }

    # Load the certificate files.
    ssl_certificate /etc/letsencrypt/live/myportfolio/fullchain.pem; # The full certificate chain file
    ssl_certificate_key /etc/letsencrypt/live/myportfolio/privkey.pem; # The private key file
    ssl_trusted_certificate /etc/letsencrypt/live/myportfolio/chain.pem; # The trusted certificate chain file
}
